/*-------------------------------------------------------------------------------------------------
| *** UNCLASSIFIED ***
|--------------------------------------------------------------------------------------------------
| U.S. Army Research, Development, and Engineering Command
| Aviation and Missile Research, Development, and Engineering Center
| Software Engineering Directorate, Redstone Arsenal, AL
|--------------------------------------------------------------------------------------------------
| Export-Control Act Warning: Warning - This Document contains technical data whose export is
| restricted by the Arms Export Control Act (Title 22, U.S.C., Sec 2751, et seq) or the Export
| Administration Act of 1979, as amended, Title 50, U.S.C., App. 2401 et seq. Violations of these
| export laws are subject to severe criminal penalties. Disseminate in accordance with provisions
| of DoD Directive 5230.25.
|--------------------------------------------------------------------------------------------------
| Distribution Statement C:  Distribution authorized to U.S. Government Agencies and their
| contractors, Export Controlled, Critical Technology, 13 Feb 2017. Other request for this document
| shall be referred to U.S. Army Aviation and Missile Research Development and Engineering Center
| Software Engineering Directorate, Attn: RDMR-BAW, Redstone Arsenal, AL 35898.
--------------------------------------------------------------------------------------------------*/

syntax = "proto3";
option csharp_namespace = "MedusaAdapter";

import "google/protobuf/empty.proto";
import "Protos/Common.proto";
import "Protos/SystemAlerts.proto";

package mil.airforce.mc2.sdk.generated;
option java_package = "mil.airforce.mc2.sdk.generated";
option java_outer_classname = "AlertsManagerProto";

//
// AlertsManager
// Service used to publish SystemAlerts to subscribers
//
service AlertsManager {

  //
  // getVersion
  // Get the version of the Configuration manager. this is a unary blocking call.
  //
  rpc getVersion (google.protobuf.Empty) returns (VersionInfo);

  //
  // sendAlert
  // Ability to send a system-wide alert from a SDK client to all subscribed clients.
  // NOTE: does not send out across MEDUSA as an alert.
  //
  rpc sendAlert (SystemAlert) returns (ResponseInfo);

  //
  // subscribe
  // Ability for a client to receive status, heartbeats, and alerts as they occur within the system
  // from DON services.
  //
  rpc subscribe (ClientAlertsSubscription) returns (stream AlertsSubscriptionResponse);
}

//
// ClientAlertsSubscription
// Message used to subscribe a client to the AlertsManager
//
message ClientAlertsSubscription {
  bool subscribeToDeviceAlerts = 1;
  bool subscribeToServiceAlerts = 2;
  bool subscribeToClientAlerts = 3;
}

//
// AlertsSubscriptionResponse
// Message used to send SystemAlerts to subscribers
//
message AlertsSubscriptionResponse {
  SystemAlert alert = 1;
}