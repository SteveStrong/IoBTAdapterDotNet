/*-------------------------------------------------------------------------------------------------
| *** UNCLASSIFIED ***
|--------------------------------------------------------------------------------------------------
| U.S. Army Research, Development, and Engineering Command
| Aviation and Missile Research, Development, and Engineering Center
| Software Engineering Directorate, Redstone Arsenal, AL
|--------------------------------------------------------------------------------------------------
| Export-Control Act Warning: Warning - This Document contains technical data whose export is
| restricted by the Arms Export Control Act (Title 22, U.S.C., Sec 2751, et seq) or the Export
| Administration Act of 1979, as amended, Title 50, U.S.C., App. 2401 et seq. Violations of these
| export laws are subject to severe criminal penalties. Disseminate in accordance with provisions
| of DoD Directive 5230.25.
|--------------------------------------------------------------------------------------------------
| Distribution Statement C:  Distribution authorized to U.S. Government Agencies and their
| contractors, Export Controlled, Critical Technology, 13 Feb 2017. Other request for this document
| shall be referred to U.S. Army Aviation and Missile Research Development and Engineering Center
| Software Engineering Directorate, Attn: RDMR-BAW, Redstone Arsenal, AL 35898.
--------------------------------------------------------------------------------------------------*/

syntax = "proto3";
option csharp_namespace = "MedusaAdapter";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "Protos/Common.proto";
import "Protos/ServiceStatus.proto";

package mil.airforce.mc2.sdk.generated;
option java_package = "mil.airforce.mc2.sdk.generated";
option java_outer_classname = "SystemsManagerProto";

//
// The systems manager service provides public calls into the MEDUSA system for
// high-level systems io, such as receiving DON services status, alerts, and heartbeats.
// It also supports loading of initial configuration values such as system protected areas.
//
service SystemsManager {

  //
  // getVersion
  // Get the version of the systems manager. this is a unary blocking call.
  //
  rpc getVersion (google.protobuf.Empty) returns (VersionInfo);

  //
  // getStatuses
  // Get the most recent set of system statuses maintained within the systems manager.
  // Input parameters: none
  // Output: ServiceSubscriptionResponse, containing one response per system
  //
  rpc getStatuses (google.protobuf.Empty) returns (ServiceSubscriptionResponse);

  //
  // publish
  // A publish call from a Medusa service. Provides status from one Medusa service
  //
  rpc publish (ServiceStatusInfo) returns (ResponseInfo);

  //
  // subscribe
  // Ability for a client to receive status for services within the system on a periodic basis -
  // both from DON and SDK services.
  //
  rpc subscribe (ClientSystemsSubscription) returns (stream ServiceSubscriptionResponse);

  //
  // cancelSubscription
  // Turns off the stream being sent via subscribe.
  //
  rpc cancelSubscription (google.protobuf.Empty) returns (ResponseInfo);

}

//
// ClientSystemSubscription
// inbound subscription details for this client. ability to subscribe to different
// event types for system services.
//
message ClientSystemsSubscription {
  repeated string services = 1; // filtering for which service names to receive status for. if empty no filtering.
  repeated ServiceTypeEnum types = 2; // filtering for which service types to receive status for. if empty no filtering.
}



